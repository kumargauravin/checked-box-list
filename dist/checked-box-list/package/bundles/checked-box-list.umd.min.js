!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/forms"),require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("checked-box-list",["exports","@angular/forms","@angular/core","@angular/common"],r):r(e["checked-box-list"]={},e.ng.forms,e.ng.core,e.ng.common)}(this,function(e,r,o,t){"use strict";var n=function(){function e(){}return e.decorators=[{type:o.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=o.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),i=function(){function e(){this.propagateChange=function(e){}}return e.prototype.registerOnChange=function(e){this.propagateChange=e},e.prototype.writeValue=function(e){e!==undefined&&null!==e&&(this.orders=e)},e.prototype.registerOnTouched=function(){},e.prototype.getOrders=function(){return[{id:100,name:"order 1"},{id:200,name:"order 2"},{id:300,name:"order 3"},{id:400,name:"order 4"}]},e.prototype.submit=function(e,r){var o=this;console.log("Submit",e,r,r.srcElement.checked),this.orders[e].checked=r.srcElement.checked,this.selectedOrderIds=this.orders.map(function(e,r){return e.checked?o.returnKey?o.orders[r][o.returnKey]:o.orders[r]:null}).filter(function(e){return null!==e}),console.log(this.selectedOrderIds),this.propagateChange(this.selectedOrderIds)},e.decorators=[{type:o.Component,args:[{selector:"ng6-checked-box-list",template:'<div style="padding: 1em;overflow:auto" [ngStyle]="{\'height.px\':maxHeightPx}">\n    <label class="container" *ngFor="let order of orders; let i = index">\n        <input type="checkbox" (click)="submit(i,$event)">\n        <span class="checkmark"></span>\n        {{order.name}}\n    </label>\n</div>',providers:[{provide:r.NG_VALUE_ACCESSOR,useExisting:o.forwardRef(function(){return e}),multi:!0}],styles:['.container{display:block;position:relative;padding-left:35px;margin-bottom:12px;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmark{position:absolute;top:0;left:0;height:20px;width:20px;background-color:#fff;border:1px solid;border-radius:6px;font-size:2rem}.container:hover input~.checkmark,input:focus~.checkmark{background-color:#eaeaea}.container input:checked~.checkmark{background-color:#0568ae;border-color:transparent}.checkmark:after{content:"";position:absolute;display:none}.container input:checked~.checkmark:after{display:block}.container .checkmark:after{left:6px;top:2px;width:5px;height:10px;border:solid #fff;border-width:0 3px 3px 0;transform:rotate(45deg)}label{display:block}::-webkit-scrollbar{-webkit-appearance:none;width:7px}::-webkit-scrollbar-thumb{border-radius:4px;background-color:rgba(0,0,0,.5);box-shadow:0 0 1px rgba(255,255,255,.5)}']}]}],e.ctorParameters=function(){return[]},e.propDecorators={orders:[{type:o.Input,args:["values"]}],returnKey:[{type:o.Input}],maxHeightPx:[{type:o.Input}]},e}(),c=function(){function e(){}return e.decorators=[{type:o.NgModule,args:[{imports:[t.CommonModule],declarations:[i],exports:[i]}]}],e}();e.CheckedBoxListService=n,e.CheckedBoxListComponent=i,e.CheckedBoxListModule=c,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=checked-box-list.umd.min.js.map