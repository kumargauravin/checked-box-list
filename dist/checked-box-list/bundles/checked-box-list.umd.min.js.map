{"version":3,"sources":["ng://checked-box-list/lib/checked-box-list.service.ts","ng://checked-box-list/lib/checked-box-list.component.ts","ng://checked-box-list/lib/checked-box-list.module.ts"],"names":["CheckedBoxListService","Injectable","args","providedIn","CheckedBoxListComponent","this","propagateChange","_","prototype","registerOnChange","fn","writeValue","value","undefined","orders","registerOnTouched","getOrders","id","name","submit","i","event","_this","console","log","srcElement","checked","selectedOrderIds","map","v","returnKey","filter","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","Input","CheckedBoxListModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"iYAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAoCE,SAAAA,IAbAC,KAAAC,gBAAe,SAAIC,KAwCrB,OArCEH,EAAAI,UAAAC,iBAAA,SAAiBC,GACfL,KAAKC,gBAAkBI,GAEzBN,EAAAI,UAAAG,WAAA,SAAWC,GACLA,IAAUC,WAAuB,OAAVD,IACzBP,KAAKS,OAASF,IAGlBR,EAAAI,UAAAO,kBAAA,aASAX,EAAAI,UAAAQ,UAAA,WACE,MAAO,CACL,CAAEC,GAAI,IAAKC,KAAM,WACjB,CAAED,GAAI,IAAKC,KAAM,WACjB,CAAED,GAAI,IAAKC,KAAM,WACjB,CAAED,GAAI,IAAKC,KAAM,aAIrBd,EAAAI,UAAAW,OAAA,SAAOC,EAAEC,GAAT,IAAAC,EAAAjB,KAIEkB,QAAQC,IAAI,SAASJ,EAAEC,EAAOA,EAAMI,WAAWC,SAC/CrB,KAAKS,OAAOM,GAAGM,QAAUL,EAAMI,WAAWC,QAC1CrB,KAAKsB,iBAAoBtB,KAAKS,OAAOc,IAAG,SAAEC,EAAGT,GAAM,OAAAS,EAAEH,QAAWJ,EAAKQ,UAAUR,EAAKR,OAAOM,GAAGE,EAAKQ,WAAWR,EAAKR,OAAOM,GAAM,OAC/HW,OAAM,SAACF,GAAK,OAAM,OAANA,IACbN,QAAQC,IAAInB,KAAKsB,kBACjBtB,KAAKC,gBAAgBD,KAAKsB,uCAxD7BK,EAAAA,UAAS9B,KAAA,CAAC,CACT+B,SAAU,uBACVC,SAAA,iTAEAC,UAAW,CACT,CACEC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAU,WAAO,OAAAnC,IAC9BoC,OAAO,mkCAKVC,EAAAA,MAAKvC,KAAA,CAAC,6BACNuC,EAAAA,2BACAA,EAAAA,SA2CHrC,EA/DA,GCAAsC,EAAA,WAIA,SAAAA,KAOoC,2BAPnCC,EAAAA,SAAQzC,KAAA,CAAC,CACR0C,QAAS,CACPC,EAAAA,cAEFC,aAAc,CAAC1C,GACf2C,QAAS,CAAC3C,OAEwBsC,EAXpC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckedBoxListService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl, ValidatorFn } from '@angular/forms';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'ng6-checked-box-list',\n  templateUrl: \"template.html\" ,\n  styleUrls: ['./style.css'],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckedBoxListComponent ),\n      multi: true\n    }\n  ]\n})\nexport class CheckedBoxListComponent implements ControlValueAccessor{\n  @Input('values') orders:any;\n  @Input() returnKey:string;\n  @Input() maxHeightPx:string;\n  selectedOrderIds:any;\n\n  propagateChange = (_: any) => {\n  };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  writeValue(value: any) {\n    if (value !== undefined && value !== null) {\n      this.orders = value;\n    }\n  }\n  registerOnTouched() {}\n\n  constructor() {\n    //of(this.getOrders()).subscribe(orders => {\n      //console.log(\"Inside\",orders);\n      //this.orders = this.getOrders();\n   // });\n  }\n\n  getOrders() {\n    return [\n      { id: 100, name: 'order 1' },\n      { id: 200, name: 'order 2' },\n      { id: 300, name: 'order 3' },\n      { id: 400, name: 'order 4' }\n    ];\n  }\n\n  submit(i,event) {\n    /*selectedOrderIds = this.form.value.orders\n      .map((v, i) => v ? this.orders[i].id : null)\n      .filter(v => v !== null);*/\n    console.log(\"Submit\",i,event, event.srcElement.checked);\n    this.orders[i].checked = event.srcElement.checked;\n    this.selectedOrderIds =  this.orders.map((v, i) => v.checked ? (this.returnKey?this.orders[i][this.returnKey]:this.orders[i]) : null)\n    .filter(v => v !== null);\n    console.log(this.selectedOrderIds);\n    this.propagateChange(this.selectedOrderIds);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CheckedBoxListComponent } from './checked-box-list.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [CheckedBoxListComponent],\n  exports: [CheckedBoxListComponent]\n})\nexport class CheckedBoxListModule { }\n"]}